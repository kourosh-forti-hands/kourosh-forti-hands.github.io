---
import { siteConfig } from "../config";

const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;
const hasEducation = siteConfig.education && siteConfig.education.length > 0;
---

<!-- Clean Minimalist Header -->
<header
  id="header"
  class="fixed top-0 left-0 right-0 z-50 transition-all duration-300 ease-out"
>
  <nav class="relative">
    <div class="absolute inset-0 bg-white/95 backdrop-blur-sm border-b border-gray-200 transition-all duration-300" id="nav-background"></div>

    <div class="max-w-6xl mx-auto px-4 relative">
      <div class="flex items-center justify-between h-16">

        <!-- Logo/Brand Section -->
        <div class="flex items-center">
          <a href="#hero" class="flex items-center gap-3 hover:opacity-80 transition-opacity duration-200">
            <!-- Simple Logo -->
            <div class="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center">
              <span class="text-white font-bold text-sm">{siteConfig.name.charAt(0)}</span>
            </div>
            <!-- Brand Text -->
            <div class="hidden sm:block">
              <h1 class="text-lg font-semibold text-gray-900">
                {siteConfig.name}
              </h1>
              <p class="text-xs text-gray-600">{siteConfig.title}</p>
            </div>
          </a>
        </div>

        <!-- Desktop Navigation -->
        <div class="hidden lg:flex items-center space-x-8" id="desktop-nav">
          <a
            href="#about"
            class="nav-link"
            data-section="about"
          >
            About
          </a>
          {hasProjects && (
            <a
              href="#projects"
              class="nav-link"
              data-section="projects"
            >
              Projects
            </a>
          )}
          {hasExperience && (
            <a
              href="#experience"
              class="nav-link"
              data-section="experience"
            >
              Experience
            </a>
          )}
          {hasEducation && (
            <a
              href="#education"
              class="nav-link"
              data-section="education"
            >
              Education
            </a>
          )}
          <!-- Contact CTA -->
          <a
            href={`mailto:${siteConfig.social.email}`}
            class="btn-cta"
          >
            Contact
          </a>
        </div>

        <!-- Mobile Menu Button -->
        <button
          id="mobile-menu-button"
          class="lg:hidden p-2 hover:bg-gray-100 rounded-lg transition-colors duration-200"
          aria-label="Toggle mobile menu"
        >
          <svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </nav>

  <!-- Mobile Menu Overlay -->
  <div
    id="mobile-menu"
    class="lg:hidden fixed inset-0 top-16 bg-white border-t border-gray-200 transform translate-x-full transition-transform duration-300 ease-out z-40"
  >
    <!-- Mobile Navigation Links -->
    <nav class="p-6">
      <div class="space-y-4">
        <a
          href="#about"
          class="nav-link-mobile"
          data-section="about"
        >
          About
        </a>
        {hasProjects && (
          <a
            href="#projects"
            class="nav-link-mobile"
            data-section="projects"
          >
            Projects
          </a>
        )}
        {hasExperience && (
          <a
            href="#experience"
            class="nav-link-mobile"
            data-section="experience"
          >
            Experience
          </a>
        )}
        {hasEducation && (
          <a
            href="#education"
            class="nav-link-mobile"
            data-section="education"
          >
            Education
          </a>
        )}
        <div class="pt-4 border-t border-gray-200">
          <a
            href={`mailto:${siteConfig.social.email}`}
            class="btn-cta-mobile w-full block text-center"
          >
            Contact
          </a>
        </div>
      </div>
    </nav>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('header');
    const navBackground = document.getElementById('nav-background');
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const navLinks = document.querySelectorAll('.nav-link, .nav-link-mobile');
    let isMenuOpen = false;

    // Handle scroll effects
    window.addEventListener('scroll', () => {
      const currentScroll = window.pageYOffset;

      if (currentScroll > 20) {
        navBackground.classList.add('shadow-md');
      } else {
        navBackground.classList.remove('shadow-md');
      }
    });

    // Mobile menu toggle
    mobileMenuButton.addEventListener('click', () => {
      isMenuOpen = !isMenuOpen;

      if (isMenuOpen) {
        mobileMenu.style.transform = 'translateX(0)';
        mobileMenuButton.setAttribute('aria-expanded', 'true');
        document.body.style.overflow = 'hidden';
      } else {
        mobileMenu.style.transform = 'translateX(100%)';
        mobileMenuButton.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = '';
      }
    });

    // Close mobile menu when clicking outside
    mobileMenu.addEventListener('click', (e) => {
      if (e.target === mobileMenu) {
        isMenuOpen = false;
        mobileMenu.style.transform = 'translateX(100%)';
        mobileMenuButton.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = '';
      }
    });

    // Handle navigation links
    navLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        if (link.getAttribute('href').startsWith('#')) {
          e.preventDefault();
          const targetId = link.getAttribute('href');
          const targetSection = document.querySelector(targetId);

          if (targetSection) {
            const headerHeight = header.offsetHeight;
            const targetPosition = targetSection.offsetTop - headerHeight - 20;

            window.scrollTo({
              top: targetPosition,
              behavior: 'smooth'
            });

            // Close mobile menu if open
            if (isMenuOpen) {
              isMenuOpen = false;
              mobileMenu.style.transform = 'translateX(100%)';
              mobileMenuButton.setAttribute('aria-expanded', 'false');
              document.body.style.overflow = '';
            }
          }
        }
      });
    });

    // Set active navigation link based on current section
    const sections = document.querySelectorAll('section[id]');

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const sectionId = entry.target.id;
          navLinks.forEach(link => {
            const linkSection = link.getAttribute('data-section');
            if (linkSection === sectionId) {
              link.classList.add('active');
            } else {
              link.classList.remove('active');
            }
          });
        }
      });
    }, {
      rootMargin: '-100px 0px -50% 0px',
      threshold: 0.1
    });

    sections.forEach(section => {
      observer.observe(section);
    });
  });
</script>

<style>
  /* Navigation Styles */
  .nav-link {
    @apply text-gray-600 font-medium hover:text-gray-900 transition-colors duration-200 py-2;
  }

  .nav-link.active {
    @apply text-blue-600;
  }

  /* Mobile Navigation Styles */
  .nav-link-mobile {
    @apply block py-3 px-4 text-gray-700 font-medium hover:bg-gray-50 hover:text-gray-900 transition-colors duration-200 rounded-lg;
  }

  .nav-link-mobile.active {
    @apply text-blue-600 bg-blue-50;
  }

  /* CTA Button Styles */
  .btn-cta {
    @apply px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200;
  }

  .btn-cta-mobile {
    @apply py-3 px-6 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200;
  }
</style>